# Generated by Django 5.2.1 on 2025-06-11 20:04

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_id', models.CharField(max_length=100, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('dnd', models.BooleanField(default=False)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('date_added', models.DateTimeField(blank=True, null=True)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('custom_fields', models.JSONField(blank=True, default=list)),
                ('location_id', models.CharField(max_length=100)),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GlobalSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minimum_price', models.DecimalField(decimal_places=2, help_text='Minimum price for this service', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PricingOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('discount', models.DecimalField(decimal_places=2, help_text='Discount percentage (0-100)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('base_price', models.DecimalField(decimal_places=2, default=0, help_text='Base price before discount', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['service', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=500)),
                ('type', models.CharField(choices=[('text', 'Text'), ('number', 'Number'), ('boolean', 'Boolean/Yes-No'), ('choice', 'Multiple Choice'), ('multiple_choice', 'Multiple Selection'), ('date', 'Date'), ('email', 'Email')], max_length=20)),
                ('unit_price', models.DecimalField(decimal_places=2, default=0, help_text='Additional price per unit for this question', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_required', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['service', 'order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='WebhookLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('received_at', models.DateTimeField(auto_now_add=True)),
                ('data', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_submited', models.BooleanField(default=False)),
                ('signature', models.CharField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='data_management_app.contact')),
                ('services', models.ManyToManyField(related_name='purchases', to='data_management_app.service')),
            ],
        ),
        migrations.CreateModel(
            name='PurchasedService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('price_plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchases', to='data_management_app.pricingoption')),
                ('purchase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_plans', to='data_management_app.purchase')),
            ],
        ),
        migrations.CreateModel(
            name='PurChasedServiceFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('purchased_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_feature', to='data_management_app.purchasedservice')),
            ],
        ),
        migrations.CreateModel(
            name='PurchasedServicePlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('discount', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('purchased_service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='service_feature_plans', to='data_management_app.purchasedservice')),
            ],
        ),
        migrations.AddField(
            model_name='purchasedservice',
            name='selected_plan',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='selected_service', to='data_management_app.purchasedserviceplan'),
        ),
        migrations.CreateModel(
            name='PlanFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_included', models.BooleanField(default=False)),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plan_feat', to='data_management_app.purchasedservicefeature')),
                ('purchased_service_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plan_feat', to='data_management_app.purchasedserviceplan')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=200)),
                ('label', models.CharField(blank=True, max_length=200)),
                ('additional_price', models.DecimalField(decimal_places=2, default=0, help_text='Additional price for selecting this option', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='data_management_app.question')),
            ],
            options={
                'ordering': ['question', 'order'],
                'unique_together': {('question', 'value')},
            },
        ),
        migrations.CreateModel(
            name='QuestionsAndAnswers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_name', models.CharField(max_length=500)),
                ('question_type', models.CharField(max_length=200)),
                ('unit_price', models.DecimalField(decimal_places=2, default=0, help_text='Additional price per unit for this question', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('bool_ans', models.BooleanField(default=False)),
                ('purchase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='data_management_app.purchase')),
                ('purchased_service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='data_management_app.purchasedservice')),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='questionsandanswers', to='data_management_app.question')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionOptionAnswers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=200)),
                ('label', models.CharField(blank=True, max_length=200)),
                ('qty', models.CharField(blank=True, max_length=200, null=True)),
                ('question_option', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='answers', to='data_management_app.questionoption')),
                ('qu_ans', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_management_app.questionsandanswers')),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='data_management_app.service'),
        ),
        migrations.AddField(
            model_name='purchasedservice',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_management_app.service'),
        ),
        migrations.AddField(
            model_name='pricingoption',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pricing_options', to='data_management_app.service'),
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='features', to='data_management_app.service')),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('service', 'name')},
            },
        ),
        migrations.CreateModel(
            name='PricingOptionFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_included', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pricing_options', to='data_management_app.feature')),
                ('pricing_option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='selected_features', to='data_management_app.pricingoption')),
            ],
            options={
                'verbose_name': 'Pricing Option Feature',
                'verbose_name_plural': 'Pricing Option Features',
                'unique_together': {('pricing_option', 'feature')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='pricingoption',
            unique_together={('service', 'name')},
        ),
    ]
